services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: weatherdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./backend/sql:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - weather-net

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      PORT: 4000
      DATABASE_URL: postgres://postgres:root@postgres:5432/weatherdb
      JWT_SECRET: replace_with_a_strong_secret
      JWT_EXPIRES_IN: 7d
      BCRYPT_SALT_ROUNDS: 10
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - weather-net

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      VITE_API_URL: http://backend:4000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - weather-net

volumes:
  pgdata:

networks:
  weather-net:
    driver: bridge